/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";
import { agentData, defaultAgentData } from "./agentData";
import { MotionInterface, circularMotion } from "./flight";
import { ColorValueHex } from ".";

interface Boid {
  position: THREE.Vector3Tuple;
  motion?: ({ radius, ref, goal }: MotionInterface) => void;
  agentData: agentData;
  color: ColorValueHex;
}

function PaperBoid({
  position,
  color,
  motion = circularMotion,
  agentData = defaultAgentData,
}: Boid) {
  const { nodes } = useGLTF("/round-plane.glb");
  const ref = useRef<THREE.Mesh>(null!);
  const cone = useRef<THREE.Mesh>(null!);
  const sphere = useRef<THREE.Mesh>(null!);

  useFrame((state, delta) => {
    motion({ ref, goal: [state.pointer.x, state.pointer.y], delta });
    agentData.alive += delta;
  });

  return (
    <mesh
      userData={agentData}
      ref={ref}
      // @ts-ignore
      geometry={nodes.Plane002.geometry}
      rotation={[-Math.PI / 2, -Math.PI / 2, 0]}
      position={position}
      scale={agentData.mass}
    >
      <meshPhysicalMaterial color={color} />
      {/* {ref?.current?.userData.debug && (
        <mesh
          ref={cone}
          position={[0, 0, -agentData.visibility / 2]}
          rotation={[Math.PI / 2, 0, 0]}
        >
          <coneGeometry
            args={[agentData.visibility, agentData.visibility, 8]}
          />
          <meshBasicMaterial
            // color={"red"}
            opacity={0.1}
            // transparent
            wireframe
          />
        </mesh>
      )} */}
      {ref?.current?.userData.debug && (
        <mesh ref={sphere} position={[0, 0, 0]}>
          <sphereGeometry args={[agentData.visibility, 32, 16]} />
          <meshBasicMaterial
            color={"red"}
            opacity={0.1}
            transparent
            // wireframe
          />
        </mesh>
      )}
    </mesh>
  );
}

useGLTF.preload("/round-plane.glb");

export default PaperBoid;
